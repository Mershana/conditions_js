'use strict' // строгий режим

// Область видимости let и var в if-else

// zadacha 1 Автор приведенного ниже кода хотел выполнить проверку возраста на достижение 18 лет. Код, однако, не работает. Исправьте ошибку автора кода. Вот проблемный код:

// let age = 17;
// let adult;

// if (age >= 18) {
// 	adult = true;
// } else {
// 	adult = false;
// }
// console.log(adult);
 
//Zadacha 2 Автор приведенного ниже кода хотел выполнить проверку возраста на достижение 18 лет. Код, однако, при любом значение возраста выводит в консоль значение undefined. Исправьте ошибку автора кода. Вот проблемный код:

// let age = 17;
// let adult;
// if (age >= 18) {
// 	 adult = true;
// } else {
// 	 adult = false;
// }
// console.log(adult);

//zadacha 3 Автор приведенного ниже кода хотел выполнить проверку возраста на достижение 18 лет. После проверки кода оказалось, что если возраст равен или больше 18 лет, то в переменную adult записывается true, как и должно быть, однако, если возраст меньше 18, то переменная adult имеет значение undefined. Исправьте ошибку автора кода.

// let age = 17;
// let adult;

// if (age >= 18) {
// 	adult = true;
// } else {
//  	adult = false;
// }
// console.log(adult);

//  zadacha 4 Автор приведенного ниже кода хотел выполнить проверку возраста. Код, однако, при любом значение возраста выводит в консоль значение undefined. Исправьте ошибку автора кода.

// let age = 24;
// let result;

// if (age >= 18) {
// 	if (age <= 23) {
// 		result = 'от 18 до 23';
// 	} else {
// 		 result = 'больше 23';
// 	}
// } else {
// 	 result = 'меньше 18';
// }
// console.log(result);

// zadacha 5 Автор приведенного ниже кода хотел выполнить проверку возраста. Код, однако, при значение возраста большим 18 лет выводит в консоль значение undefined. Исправьте ошибку автора кода.

// let age = 23;
// let result;

// if (age >= 18) {
// 	result;
// 	if (age <= 23) {
// 		result = 'от 18 до 23';
// 	} else {
// 		result = 'больше 23';
// 	}
// } else {
// 	result = 'меньше 18';
// }
// console.log(result);

						// Область видимости var
// В самом начале учебника я рассказывал вам, что переменные можно объявлять либо через let, либо через var. Эти два способа объявления переменных создают для них разные области видимости.

// Посмотрим на примерах. В следующем примере переменная объявлена через let внутри условия и поэтому не видна снаружи условия:

// if (true) {
// 	let result = '!';
// }
// console.log(result); // выдаст ошибку

// А вот если объявить переменную через var - то переменная будет видна снаружи условия:

// if (true) {
// 	var result = '!';
// }
// console.log(result); // выведет '!'

// zadacha 6 Определите, что выведет приведенный код:
// let num = 1;
// if (num == 1) {
// 	var result = 'верно'; // true
// } else {
// 	var result = 'неверно';
// }
// console.log(result);

// zadacha 7 Определите, что выведет приведенный код:
// let num = 1;
// if (num == 1) {
// 	let result = 'верно';
// } else {
// 	let result = 'неверно';
// }
// console.log(result);

// Замечания по поводу let и var
// Как я упоминал ранее, объявление переменных через let появилось в JavaScript позже, чем объявление переменных через var. В настоящее время рекомендуется объявлять переменные именно через let, так как область видимости таких переменных ограничена фигурными скобками (это защищает код от случайных ошибок).
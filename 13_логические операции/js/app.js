'use strict' // строгий режим

// Логические операции в JavaScript
// Давайте посмотрим на следующий код:

// let a = 1;
// let b = 2;

// if (a == b) {
// 	console.log(true);
// } else {
// 	console.log(false);
// }
// Как вы видите, в данном коде выполняется сравнение переменных a и b и, если они равны, то в консоль выводится true, а если не равны - то false.

// Здесь пришло время открыть вам некоторую неочевидную вещь: на самом деле конструкция if не является обязательной для сравнения - сами операторы вида ==, ===, !=, <, > и т.д. возвращают своим результатом либо true, либо false.

// Смотрите пример:

// console.log(1 == 1); // выведет true
// console.log(1 == 2); // выведет false
// Исходя из написанного, код из начала урока можно переписать более простым образом:

// let a = 1;
// let b = 2;

// console.log(a == b);
// Можно не выводить результат сразу в консоль, а присвоить его какой-нибудь переменной:

// let a = 1;
// let b = 2;

// let result = a == b;
// console.log(result);

// Задача 1
// Пусть даны следующие переменные:

// let a = 2 * (3 - 1);
// let b = 6 - 2;
// Используя оператор ==, узнайте, равны ли значения этих переменных или нет.
// let result = a == b;
// console.log(result);

// Задача 2
// Пусть даны следующие переменные:

// let a = 5 * (7 - 4);
// let b = 1 + 2 + 7;
// Используя оператор >, узнайте, больше ли переменная a, чем b.
// let result = a > b;
// console.log(result); //true

// Задача 3
// Пусть даны следующие переменные:

// let a = 2 ** 4;
// let b = 4 ** 2;
// // Используя операцию оператор !=, узнайте, разные ли значения этих переменных или нет.
// let result = a != b;
// console.log(result);

// Логические И и ИЛИ
// В JavaScript, как мы увидим далее, этот оператор работает несколько иным образом. Но давайте сперва посмотрим, что происходит с булевыми значениями.

// Существует всего четыре возможные логические комбинации:

// alert( true || true );   // true
// alert( false || true );  // true
// alert( true || false );  // true
// alert( false || false ); // false

// Как мы можем наблюдать, результат операций всегда равен true, за исключением случая, когда оба аргумента false.

// Если значение не логического типа, то оно к нему приводится в целях вычислений.

// Например, число 1 будет воспринято как true, а 0 – как false:

// && (И)
// Оператор И пишется как два амперсанда &&:

// result = a && b;
// В традиционном программировании И возвращает true, если оба аргумента истинны, а иначе – false:

// alert( true && true );   // true
// alert( false && true );  // false
// alert( true && false );  // false
// alert( false && false ); // false

//zadacha 1
// Проверка значения из диапазона
// Напишите условие if для проверки, что переменная age находится в диапазоне между 14 и 90 включительно.
// «Включительно» означает, что значение переменной age может быть равно 14 или 90.

// let age = 91;
// if (age >= 14 && age <= 90){
// 	console.log('верно'); 
// } else {
// 	console.log('неверно'); // false
// }

//zadacha 2 Напишите условие if для проверки, что значение переменной age НЕ находится в диапазоне 14 и 90 включительно.

// Напишите два варианта: первый с использованием оператора НЕ !, второй – без этого оператора.
//var 1
// let age = 90;
// if (!(age >= 14 && age <= 90)) {
// 	console.log('true'); 
// } else {
// 	console.log('false'); false 
// }

//variant 2
// let age = 91;
// if (age < 14 || age > 90) {
// 	console.log('true'); true
// } else {
// 	console.log('false')
// }

//zadacha 3
// Проверка логина
// важность: 3
// Напишите код, который будет спрашивать логин с помощью prompt.

// Если посетитель вводит «Админ», то prompt запрашивает пароль, если ничего не введено или нажата клавиша Esc – показать «Отменено», в противном случае отобразить «Я вас не знаю».

// Пароль проверять так:

// Если введён пароль «Я главный», то выводить «Здравствуйте!»,
// Иначе – «Неверный пароль»,
// При отмене – «Отменено».

// Для решения используйте вложенные блоки if. Обращайте внимание на стиль и читаемость кода.

// Подсказка: передача пустого ввода в приглашение prompt возвращает пустую строку ''. Нажатие клавиши Esc во время запроса возвращает null.

let name = prompt('кто там?', '');
if (name === 'админ') {
	let pass = prompt('пароль?', '');
	if (pass === 'я главный') {
			alert('здраствуйте');
	} else if (pass === '' || pass === null) {
		alert('отменено'); 
	} else {
		alert('неверный пароль');
	}
} else if (name === '' || name === null) {
	alert('отменено');
} else {
	alert('я вас не знаю');
}

